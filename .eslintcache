[{"/Users/rungrot/Repos/todo/src/App.js":"1","/Users/rungrot/Repos/todo/src/components/Todo.js":"2","/Users/rungrot/Repos/todo/src/components/Login.js":"3"},{"size":924,"mtime":1607853785553,"results":"4","hashOfConfig":"5"},{"size":7172,"mtime":1607853983634,"results":"6","hashOfConfig":"5"},{"size":1616,"mtime":1607841660532,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"140zsfk",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rungrot/Repos/todo/src/App.js",["15","16","17"],"/Users/rungrot/Repos/todo/src/components/Todo.js",["18"],"import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport Axios from 'axios';\n\nconst customStyles = {\n    content : {\n      top : '50%',\n      left : '50%',\n      right : 'auto',\n      bottom : 'auto',\n      marginRight : '-50%',\n      transform : 'translate(-50%, -50%)'\n    }\n};\n\nconst TODO_ENDPOINT = \"https://candidate.neversitup.com/todo\"\n\nconst Todo = ({session}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [modalUpdateIsOpen, setUpdateIsOpen] = useState(false);\n    const [modalDeleteIsOpen, setDeleteIsOpen] = useState(false);\n    const [todos, setTodos] = useState({ items: [] });\n    const [updateId, setUpdateId] = useState('');\n    const [deleteId, setDeleteId] = useState('');\n    const [deleteTitle, setDeleteTitle] = useState('');\n\n    const openCreateModal = () => {\n        setIsOpen(true);\n    }\n     \n    const closeCreateModal = () => {\n        clearTitleAndDesc()\n        setIsOpen(false);\n    }\n\n    const openUpdateModal = (id) => {\n        setUpdateId(id);\n        getTodo(id)\n        setUpdateIsOpen(true);\n    }\n     \n    const closeUpdateModal = () => {\n        clearTitleAndDesc()\n        setUpdateIsOpen(false);\n    }\n\n    const openDeleteModal = (id) => {\n        setDeleteId(id);\n        let todoWilltitle = todos.items.find(todo => todo._id === id);\n        setDeleteTitle(todoWilltitle.title)\n        setDeleteIsOpen(true);\n    }\n\n    const closeDeleteModal = () => {\n        setDeleteIsOpen(false);\n    }\n\n    const handleTitle = event => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescription = event => {\n        setDescription(event.target.value)\n    }\n\n    const clearTitleAndDesc = () => {\n        setTitle('')\n        setDescription('')\n    }\n\n    const fetchTodo = async () => {\n        const access_token = localStorage.getItem('access_token')\n        let response = await Axios.get(`${TODO_ENDPOINT}/todos`,{\n            headers: {\n                'Authorization': `${access_token}`\n            }\n        })\n        setTodos({\n            items: response.data\n        })\n    }\n\n    const createTodo = async () => {\n        const access_token = localStorage.getItem('access_token')\n        await Axios.post(`${TODO_ENDPOINT}/todos`,{\n            \"title\": title,\n\t        \"description\": description\n        },{\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        })\n        fetchTodo()\n        closeCreateModal()\n        clearTitleAndDesc()\n    }\n\n    const getTodo = async (id) => {\n        const access_token = localStorage.getItem('access_token')\n        let response = await Axios.get(`${TODO_ENDPOINT}/todos/${id}`,{\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        })\n        setTitle(response.data.title)\n        setDescription(response.data.description)\n    }\n\n    const updateTodo = async () => {\n        const access_token = localStorage.getItem('access_token')\n        await Axios.put(`${TODO_ENDPOINT}/todos/${updateId}`,{\n            \"title\": title,\n\t        \"description\": description\n        },{\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        })\n        fetchTodo()\n        closeUpdateModal()\n        clearTitleAndDesc()\n    }\n\n    const deteteTodo  = async () =>{\n        const access_token = localStorage.getItem('access_token')\n        await Axios.delete(`${TODO_ENDPOINT}/todos/${deleteId}`,{\n            headers: {\n                'Authorization': `${access_token}`\n            }\n        })\n        closeDeleteModal()\n        fetchTodo()\n        clearTitleAndDesc()\n    }\n\n    useEffect(() => {\n        fetchTodo()\n      return () => {\n      }\n    }, [])\n\n    return (\n        <div>\n            \n            <div>\n                {\n                    todos.items.length > 0 ? todos.items.map((todo, key) => {\n                        return (\n                        <div>\n                            <div key={todo._id} onClick={() => {\n                                openUpdateModal(todo._id)\n                            }}>\n                                <h3 key={key}>{todo.title}</h3>\n                                <p>{todo.description}</p>\n                                <p>created: {todo.createdAt}</p>\n                                <p>updated: {todo.updatedAt}</p>\n                            </div>\n                            <button type=\"text\" onClick={() => {\n                                openDeleteModal(todo._id)\n                            }}>delete</button>\n                        </div>\n                        \n                        )\n                    }) : <p> Empty press 'Create' for add new todo </p>\n                }\n            </div>\n\n            <div>\n                <button onClick={openCreateModal}>+ Create</button>\n            </div>\n            \n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeCreateModal}\n                style={customStyles}\n                contentLabel=\"Create a new todo\"\n            >\n                <div>\n                    <div>Title</div>\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={handleTitle}/>\n                    <div>Desscription</div>\n                    <input type=\"text\" placeholder=\"Desscription\" value={description} onChange={handleDescription}/>\n                </div>\n                <div>\n                    <button type=\"button\" onClick={closeCreateModal}>Cancle</button>\n                    <button type=\"button\" onClick={createTodo}>Create</button>\n                </div>\n            </Modal>\n\n            <Modal\n                isOpen={modalUpdateIsOpen}\n                onRequestClose={closeUpdateModal}\n                style={customStyles}\n                contentLabel=\"Create a new todo\"\n            >\n                <div>\n                    <div>Title</div>\n                    <input type=\"text\" placeholder=\"Title\" value={title} onChange={handleTitle}/>\n                    <div>Desscription</div>\n                    <input type=\"text\" placeholder=\"Desscription\" value={description} onChange={handleDescription}/>\n                </div>\n                <div>\n                    <button type=\"button\" onClick={closeUpdateModal}>Cancle</button>\n                    <button type=\"button\" onClick={updateTodo}>Edit</button>\n                </div>\n            </Modal>\n\n            <Modal\n                isOpen={modalDeleteIsOpen}\n                onRequestClose={closeUpdateModal}\n                style={customStyles}\n                contentLabel=\"Create a new todo\"\n            >\n                <div>\n                    want to delete {deleteTitle} ?\n                </div>\n                <div>\n                    <button type=\"button\" onClick={closeDeleteModal}>Cancle</button>\n                    <button type=\"button\" onClick={deteteTodo}>Confirm</button>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Todo","/Users/rungrot/Repos/todo/src/components/Login.js",[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},{"ruleId":"19","severity":1,"message":"23","line":6,"column":8,"nodeType":"21","messageId":"22","endLine":6,"endColumn":13},{"ruleId":"19","severity":1,"message":"24","line":27,"column":9,"nodeType":"21","messageId":"22","endLine":27,"endColumn":21},{"ruleId":"19","severity":1,"message":"25","line":2,"column":8,"nodeType":"21","messageId":"22","endLine":2,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'handleLogout' is assigned a value but never used.","'ReactDOM' is defined but never used."]